using System;

namespace Snake2._0
{
    enum Elements
    {
        Apple = -2,
        Wall = -1,
        Head = 1//всё, что больше числового значения головы - тело
    }
    internal partial class Map
    {
        static int[,] map;
        readonly int x;//высота
        readonly int y;//ширина
        int emptyPlace;//для метода выигрыша, когда останется 1 или 0, то победа
        public bool lose { get; set; } = false;//для цикла в StartGame
        public bool win { get; set; } = false;//для цикла в StartGame
        public Map() 
        {
            x = MapSize.Width;
            y = MapSize.Height - 1;
            map = new int[y, x];
            InitializeMap();
            length = 3;
            map[y / 2, x / 2] = 1;
            map[y / 2, x / 2 - 1] = 2;
            map[y / 2, x / 2 - 2] = 3;
        }
        private void InitializeMap()
        {
            for (int i = 0; i < y; i++)
            {
                for (int j = 0; j < x; j++)
                {
                    if (i == 0 || i == y - 1)
                    {
                        map[i, j] = (int)Elements.Wall;
                    }
                    if (j == 0 || j == x - 1)
                    {
                        map[i, j] = (int)Elements.Wall;
                    }
                    if (map[i, j] == 0)
                    {
                        emptyPlace += 1;
                    }
                }
            }
        }//инициализация поля, создание стенок
        private void DrawMap()
        {
            for (int i = 0; i < y; i++)
            {
                for (int j = 0; j < x; j++)
                {
                    if (map[i, j] == (int)Elements.Wall)
                    {
                        Console.SetCursorPosition(j, i);
                        Console.Write('#');
                    }
                    if (map[i, j] == 0)
                    {
                        Console.SetCursorPosition(j, i);
                        Console.Write(' ');
                    }
                    if (map[i, j] == (int)Elements.Head)
                    {
                        Console.SetCursorPosition(j, i);
                        Console.Write('@');
                    }
                    if (map[i, j] > (int)Elements.Head)
                    {
                        Console.SetCursorPosition(j, i);
                        Console.Write('*');
                    }
                    //if (map[i, j] == length + 1)
                    //{
                    //    Console.SetCursorPosition(j, i);
                    //    Console.Write(' ');
                    //}
                }
            }
        }//отрисовка карты вместо со змейкой
        private void DrawFood()
        {
            Random random = new Random();
            while (true)
            {
                int _x = random.Next(0, x);
                int _y = random.Next(0, y);
                if (map[_y, _x] == 0)
                {
                    map[_y, _x] = -2;
                    Console.SetCursorPosition(_x, _y);
                    Console.Write('$');
                    break;
                }
            }

        }//создание и отрисовка еды
        public void Start()
        {
            DrawMap();
            DrawFood();
        }//первичная отрисовка
        private void YouLose()
        {
            Console.Clear();
            Console.SetWindowSize(120, 20);
            Console.SetBufferSize(120, 20);
            Console.Write(
                "\r\n─────────────────────────────────────────────────────────────────────────────────────────────────────────────────\r\n─████████──████████─██████████████─██████──██████────██████─────────██████████████─██████████████─██████████████─\r\n─██░░░░██──██░░░░██─██░░░░░░░░░░██─██░░██──██░░██────██░░██─────────██░░░░░░░░░░██─██░░░░░░░░░░██─██░░░░░░░░░░██─\r\n─████░░██──██░░████─██░░██████░░██─██░░██──██░░██────██░░██─────────██░░██████░░██─██░░██████████─██░░██████████─\r\n───██░░░░██░░░░██───██░░██──██░░██─██░░██──██░░██────██░░██─────────██░░██──██░░██─██░░██─────────██░░██─────────\r\n───████░░░░░░████───██░░██──██░░██─██░░██──██░░██────██░░██─────────██░░██──██░░██─██░░██████████─██░░██████████─\r\n─────████░░████─────██░░██──██░░██─██░░██──██░░██────██░░██─────────██░░██──██░░██─██░░░░░░░░░░██─██░░░░░░░░░░██─\r\n───────██░░██───────██░░██──██░░██─██░░██──██░░██────██░░██─────────██░░██──██░░██─██████████░░██─██░░██████████─\r\n───────██░░██───────██░░██──██░░██─██░░██──██░░██────██░░██─────────██░░██──██░░██─────────██░░██─██░░██─────────\r\n───────██░░██───────██░░██████░░██─██░░██████░░██────██░░██████████─██░░██████░░██─██████████░░██─██░░██████████─\r\n───────██░░██───────██░░░░░░░░░░██─██░░░░░░░░░░██────██░░░░░░░░░░██─██░░░░░░░░░░██─██░░░░░░░░░░██─██░░░░░░░░░░██─\r\n───────██████───────██████████████─██████████████────██████████████─██████████████─██████████████─██████████████─\r\n─────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
            Console.ReadKey();
        }
        private void YouWin()
        {
            Console.Clear();
            Console.SetWindowSize(400, 30);
            Console.SetBufferSize(400, 30);
            Console.Write("░█████╗░░█████╗░███╗░░██╗░██████╗░██████╗░░█████╗░████████╗██╗░░░██╗██╗░░░░░░█████╗░████████╗██╗░█████╗░███╗░░██╗░██████╗██╗██╗\r\n██╔══██╗██╔══██╗████╗░██║██╔════╝░██╔══██╗██╔══██╗╚══██╔══╝██║░░░██║██║░░░░░██╔══██╗╚══██╔══╝██║██╔══██╗████╗░██║██╔════╝██║██║\r\n██║░░╚═╝██║░░██║██╔██╗██║██║░░██╗░██████╔╝███████║░░░██║░░░██║░░░██║██║░░░░░███████║░░░██║░░░██║██║░░██║██╔██╗██║╚█████╗░██║██║\r\n██║░░██╗██║░░██║██║╚████║██║░░╚██╗██╔══██╗██╔══██║░░░██║░░░██║░░░██║██║░░░░░██╔══██║░░░██║░░░██║██║░░██║██║╚████║░╚═══██╗╚═╝╚═╝\r\n╚█████╔╝╚█████╔╝██║░╚███║╚██████╔╝██║░░██║██║░░██║░░░██║░░░╚██████╔╝███████╗██║░░██║░░░██║░░░██║╚█████╔╝██║░╚███║██████╔╝██╗██╗\r\n░╚════╝░░╚════╝░╚═╝░░╚══╝░╚═════╝░╚═╝░░╚═╝╚═╝░░╚═╝░░░╚═╝░░░░╚═════╝░╚══════╝╚═╝░░╚═╝░░░╚═╝░░░╚═╝░╚════╝░╚═╝░░╚══╝╚═════╝░╚═╝╚═╝\r\n\r\n██╗░░░██╗░█████╗░██╗░░░██╗  ░██╗░░░░░░░██╗██╗███╗░░██╗\r\n╚██╗░██╔╝██╔══██╗██║░░░██║  ░██║░░██╗░░██║██║████╗░██║\r\n░╚████╔╝░██║░░██║██║░░░██║  ░╚██╗████╗██╔╝██║██╔██╗██║\r\n░░╚██╔╝░░██║░░██║██║░░░██║  ░░████╔═████║░██║██║╚████║\r\n░░░██║░░░╚█████╔╝╚██████╔╝  ░░╚██╔╝░╚██╔╝░██║██║░╚███║\r\n░░░╚═╝░░░░╚════╝░░╚═════╝░  ░░░╚═╝░░░╚═╝░░╚═╝╚═╝░░╚══╝");
        }
    }
}
